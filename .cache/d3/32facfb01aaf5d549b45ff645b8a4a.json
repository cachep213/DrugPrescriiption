{"id":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","dependencies":[{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\package.json","includedInParent":true,"mtime":1604283705355},{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\multiaddr\\node_modules\\multicodec\\package.json","includedInParent":true,"mtime":1603876922174},{"name":"./base-table.json","loc":{"line":3,"column":26},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\multiaddr\\node_modules\\multicodec\\src\\varint-table.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\multiaddr\\node_modules\\multicodec\\src\\base-table.json"},{"name":"./util","loc":{"line":4,"column":29},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\multiaddr\\node_modules\\multicodec\\src\\varint-table.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\multiaddr\\node_modules\\multicodec\\src\\util.js"}],"generated":{"js":"'use strict'\n\nconst baseTable = require('./base-table.json')\nconst varintEncode = require('./util').varintEncode\n\n// map for codecName -> codeVarintUint8Array\nconst varintTable = {}\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  varintTable[encodingName] = varintEncode(code)\n}\n\nmodule.exports = Object.freeze(varintTable)\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}}],"sources":{"../node_modules/multiaddr/node_modules/multicodec/src/varint-table.js":"'use strict'\n\nconst baseTable = require('./base-table.json')\nconst varintEncode = require('./util').varintEncode\n\n// map for codecName -> codeVarintUint8Array\nconst varintTable = {}\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  varintTable[encodingName] = varintEncode(code)\n}\n\nmodule.exports = Object.freeze(varintTable)\n"},"lineCount":15}},"error":null,"hash":"bf943c873ed55b5e2fa09d89d8166d81","cacheData":{"env":{}}}