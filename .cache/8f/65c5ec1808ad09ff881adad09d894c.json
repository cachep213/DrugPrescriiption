{"id":"F1KD","dependencies":[{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\package.json","includedInParent":true,"mtime":1604297038892},{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipld-raw\\package.json","includedInParent":true,"mtime":1604296182269},{"name":"cids","loc":{"line":2,"column":20},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipld-raw\\src\\index.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\cids\\src\\index.js"},{"name":"multihashing-async","loc":{"line":3,"column":29},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipld-raw\\src\\index.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\multihashing-async\\src\\index.js"},{"name":"multicodec","loc":{"line":4,"column":27},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipld-raw\\src\\index.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipld-raw\\node_modules\\multicodec\\src\\index.js"}],"generated":{"js":"\"use strict\";const e=require(\"cids\"),r=require(\"multihashing-async\"),s=require(\"multicodec\");module.exports={codec:s.RAW,defaultHashAlg:s.SHA2_256,resolver:{resolve:(e,r)=>({value:e,remainderPath:\"\"}),tree:e=>({done:!0})},util:{deserialize:e=>e,serialize:e=>e,cid:async(i,t)=>{const a={cidVersion:1,hashAlg:module.exports.defaultHashAlg},l=Object.assign(a,t),c=await r(i,l.hashAlg),o=s.print[module.exports.codec];return new e(l.cidVersion,o,c)}}};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":13}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":19}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":21}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":2,"column":0},"generated":{"line":1,"column":29}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":3,"column":0},"generated":{"line":1,"column":37}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":3,"column":0},"generated":{"line":1,"column":39}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":3,"column":0},"generated":{"line":1,"column":47}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":4,"column":0},"generated":{"line":1,"column":69}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":4,"column":0},"generated":{"line":1,"column":71}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":4,"column":0},"generated":{"line":1,"column":79}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":7,"column":0},"generated":{"line":1,"column":93}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":7,"column":0},"generated":{"line":1,"column":100}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":7,"column":0},"generated":{"line":1,"column":108}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":8,"column":0},"generated":{"line":1,"column":109}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":8,"column":0},"generated":{"line":1,"column":115}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":8,"column":0},"generated":{"line":1,"column":117}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":9,"column":0},"generated":{"line":1,"column":121}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":9,"column":0},"generated":{"line":1,"column":136}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":9,"column":0},"generated":{"line":1,"column":138}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":10,"column":0},"generated":{"line":1,"column":147}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":10,"column":0},"generated":{"line":1,"column":156}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":22,"column":0},"generated":{"line":1,"column":157}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":22,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":22,"column":0},"generated":{"line":1,"column":166}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":22,"column":0},"generated":{"line":1,"column":168}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":23,"column":0},"generated":{"line":1,"column":173}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":24,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":24,"column":0},"generated":{"line":1,"column":180}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":25,"column":0},"generated":{"line":1,"column":182}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":25,"column":0},"generated":{"line":1,"column":196}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":35,"column":0},"generated":{"line":1,"column":201}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":35,"column":0},"generated":{"line":1,"column":206}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":36,"column":0},"generated":{"line":1,"column":210}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":37,"column":0},"generated":{"line":1,"column":211}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":37,"column":0},"generated":{"line":1,"column":217}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":41,"column":0},"generated":{"line":1,"column":222}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":41,"column":0},"generated":{"line":1,"column":227}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":42,"column":0},"generated":{"line":1,"column":228}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":42,"column":0},"generated":{"line":1,"column":240}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":43,"column":0},"generated":{"line":1,"column":243}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":45,"column":0},"generated":{"line":1,"column":245}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":45,"column":0},"generated":{"line":1,"column":255}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":46,"column":0},"generated":{"line":1,"column":258}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":57,"column":0},"generated":{"line":1,"column":260}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":57,"column":0},"generated":{"line":1,"column":264}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":57,"column":0},"generated":{"line":1,"column":270}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":57,"column":0},"generated":{"line":1,"column":272}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":58,"column":0},"generated":{"line":1,"column":277}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":58,"column":0},"generated":{"line":1,"column":283}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":58,"column":0},"generated":{"line":1,"column":285}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":58,"column":0},"generated":{"line":1,"column":286}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":58,"column":0},"generated":{"line":1,"column":297}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":58,"column":0},"generated":{"line":1,"column":299}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":58,"column":0},"generated":{"line":1,"column":307}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":58,"column":0},"generated":{"line":1,"column":314}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":58,"column":0},"generated":{"line":1,"column":322}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":59,"column":0},"generated":{"line":1,"column":338}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":59,"column":0},"generated":{"line":1,"column":340}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":59,"column":0},"generated":{"line":1,"column":347}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":59,"column":0},"generated":{"line":1,"column":354}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":59,"column":0},"generated":{"line":1,"column":356}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":61,"column":0},"generated":{"line":1,"column":359}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":61,"column":0},"generated":{"line":1,"column":367}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":61,"column":0},"generated":{"line":1,"column":369}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":61,"column":0},"generated":{"line":1,"column":371}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":61,"column":0},"generated":{"line":1,"column":373}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":62,"column":0},"generated":{"line":1,"column":382}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":62,"column":0},"generated":{"line":1,"column":384}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":62,"column":0},"generated":{"line":1,"column":386}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":62,"column":0},"generated":{"line":1,"column":392}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":62,"column":0},"generated":{"line":1,"column":399}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":62,"column":0},"generated":{"line":1,"column":407}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":65,"column":0},"generated":{"line":1,"column":414}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":63,"column":0},"generated":{"line":1,"column":421}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":63,"column":0},"generated":{"line":1,"column":425}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":63,"column":0},"generated":{"line":1,"column":427}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":63,"column":0},"generated":{"line":1,"column":429}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":63,"column":0},"generated":{"line":1,"column":440}},{"source":"../node_modules/ipld-raw/src/index.js","original":{"line":63,"column":0},"generated":{"line":1,"column":442}}],"sources":{"../node_modules/ipld-raw/src/index.js":"'use strict'\nconst CID = require('cids')\nconst multihashing = require('multihashing-async')\nconst multicodec = require('multicodec')\n\n// binary resolver\nmodule.exports = {\n  codec: multicodec.RAW,\n  defaultHashAlg: multicodec.SHA2_256,\n  resolver: {\n    /**\n     * Resolves a path within a Raw block.\n     *\n     * Always returns the raw data as value without any remainderPath.\n     *\n     * @param {Buffer} binaryBlob - Binary representation of a PB block\n     * @param {string} [path='/'] - Path that should be resolved (that value is ignored)\n     * @returns {Object} result - Result of the path it it was resolved successfully\n     * @returns {*} result.value - The raw data\n     * @returns {string} result.remainderPath - An empty string\n     */\n    resolve: (binaryBlob, path) => {\n      return {\n        value: binaryBlob,\n        remainderPath: ''\n      }\n    },\n    /**\n     * Return all available paths of a block.\n     *\n     * @generator\n     * @param {Buffer} binaryBlob - The raw data\n     * @returns {Object} - Finished generator with `done: true`\n     */\n    tree: (binaryBlob) => {\n      return {\n        done: true\n      }\n    }\n  },\n  util: {\n    deserialize: (data) => {\n      return data\n    },\n    serialize: (data) => {\n      return data\n    },\n    /**\n     * Calculate the CID of the binary blob.\n     *\n     * @param {Object} binaryBlob - Encoded IPLD Node\n     * @param {Object} [userOptions] - Options to create the CID\n     * @param {number} [userOptions.cidVersion=1] - CID version number\n     * @param {string} [UserOptions.hashAlg] - Defaults to the defaultHashAlg of the format\n     * @returns {Promise.<CID>}\n     */\n    cid: async (binaryBlob, userOptions) => {\n      const defaultOptions = { cidVersion: 1, hashAlg: module.exports.defaultHashAlg }\n      const options = Object.assign(defaultOptions, userOptions)\n\n      const multihash = await multihashing(binaryBlob, options.hashAlg)\n      const codecName = multicodec.print[module.exports.codec]\n      const cid = new CID(options.cidVersion, codecName, multihash)\n\n      return cid\n    }\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"948d049078bb5db68e9df07bfd0934e4","cacheData":{"env":{}}}