{"id":"../node_modules/iso-stream-http/index.browser.js","dependencies":[{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\package.json","includedInParent":true,"mtime":1604283705355},{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\iso-stream-http\\package.json","includedInParent":true,"mtime":1604296182102},{"name":"./lib/http","loc":{"line":1,"column":21},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\iso-stream-http\\index.browser.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\iso-stream-http\\lib\\http.js"}],"generated":{"js":"const http = require('./lib/http')\nconst https = http\nconst URL = self.URL\n\nmodule.exports = {\n    http,\n    https,\n    getRequest: (options, cb) => {\n        let protocol = 'http:'\n\n        if (typeof options === 'string') {\n            const url = new URL(options)\n            protocol = url.protocol\n        } else if (options.protocol) {\n            protocol = options.protocol\n        }\n\n        return protocol === 'http:' ? http.request(options, cb) : https.request(options, cb)\n    }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/iso-stream-http/index.browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"../node_modules/iso-stream-http/index.browser.js":"const http = require('./lib/http')\nconst https = http\nconst URL = self.URL\n\nmodule.exports = {\n    http,\n    https,\n    getRequest: (options, cb) => {\n        let protocol = 'http:'\n\n        if (typeof options === 'string') {\n            const url = new URL(options)\n            protocol = url.protocol\n        } else if (options.protocol) {\n            protocol = options.protocol\n        }\n\n        return protocol === 'http:' ? http.request(options, cb) : https.request(options, cb)\n    }\n}\n"},"lineCount":21}},"error":null,"hash":"4fc6f8866c3f446056055837e82e95d5","cacheData":{"env":{}}}