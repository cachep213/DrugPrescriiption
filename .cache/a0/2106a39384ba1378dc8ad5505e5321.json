{"id":"../node_modules/ipfs-utils/src/files/url-source.js","dependencies":[{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\package.json","includedInParent":true,"mtime":1604283705355},{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-utils\\package.json","includedInParent":true,"mtime":1603876922194},{"name":"../http","loc":{"line":3,"column":21},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-utils\\src\\files\\url-source.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-utils\\src\\http.js"}],"generated":{"js":"'use strict'\n\nconst Http = require('../http')\n\nmodule.exports = async function * urlSource (url, options) {\n  const http = new Http()\n  const response = await http.get(url, options)\n\n  yield {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: response.iterator()\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-utils/src/files/url-source.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}}],"sources":{"../node_modules/ipfs-utils/src/files/url-source.js":"'use strict'\n\nconst Http = require('../http')\n\nmodule.exports = async function * urlSource (url, options) {\n  const http = new Http()\n  const response = await http.get(url, options)\n\n  yield {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: response.iterator()\n  }\n}\n"},"lineCount":14}},"error":null,"hash":"eb2dd826ac7f91679596587624cb6844","cacheData":{"env":{}}}