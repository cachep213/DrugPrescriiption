{"id":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","dependencies":[{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\package.json","includedInParent":true,"mtime":1604283705355},{"name":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-core-utils\\package.json","includedInParent":true,"mtime":1603876922165},{"name":"err-code","loc":{"line":3,"column":24},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input\\normalise-content.browser.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\err-code\\index.js"},{"name":"ipfs-utils/src/globalthis","loc":{"line":4,"column":25},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input\\normalise-content.browser.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-utils\\src\\globalthis.js"},{"name":"it-peekable","loc":{"line":5,"column":27},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input\\normalise-content.browser.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\it-peekable\\index.js"},{"name":"browser-readablestream-to-it","loc":{"line":6,"column":34},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input\\normalise-content.browser.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\browser-readablestream-to-it\\index.js"},{"name":"it-all","loc":{"line":7,"column":20},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input\\normalise-content.browser.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\it-all\\index.js"},{"name":"./utils","loc":{"line":12,"column":12},"parent":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input\\normalise-content.browser.js","resolved":"D:\\Onedrive\\Block\\3_Hakathon\\DrugPrescriiption\\node_modules\\ipfs-core-utils\\src\\files\\normalise-input\\utils.js"}],"generated":{"js":"'use strict'\n\nconst errCode = require('err-code')\nconst { Blob } = require('ipfs-utils/src/globalthis')\nconst itPeekable = require('it-peekable')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst all = require('it-all')\n\nconst {\n  isBytes,\n  isBlob\n} = require('./utils')\n\nasync function toBlob (input) {\n  // Bytes | String\n  if (isBytes(input) || typeof input === 'string' || input instanceof String) {\n    return new Blob([input])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (typeof input.getReader === 'function') {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (input[Symbol.iterator] || input[Symbol.asyncIterator]) {\n    const peekable = itPeekable(input)\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n\nmodule.exports = toBlob\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}}],"sources":{"../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js":"'use strict'\n\nconst errCode = require('err-code')\nconst { Blob } = require('ipfs-utils/src/globalthis')\nconst itPeekable = require('it-peekable')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst all = require('it-all')\n\nconst {\n  isBytes,\n  isBlob\n} = require('./utils')\n\nasync function toBlob (input) {\n  // Bytes | String\n  if (isBytes(input) || typeof input === 'string' || input instanceof String) {\n    return new Blob([input])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (typeof input.getReader === 'function') {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (input[Symbol.iterator] || input[Symbol.asyncIterator]) {\n    const peekable = itPeekable(input)\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n\nmodule.exports = toBlob\n"},"lineCount":67}},"error":null,"hash":"a397d26145f02d392e092b0986b40d44","cacheData":{"env":{}}}